// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Represents achievement section info and it's achievements list
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.12.1.0")]
    public partial class Player_AccountMedals_Sections_AchievementSection : global::System.IEquatable<Player_AccountMedals_Sections_AchievementSection>, IPlayer_AccountMedals_Sections_AchievementSection
    {
        public Player_AccountMedals_Sections_AchievementSection(global::System.String sectionId, global::System.Int32 order, global::System.String name, global::System.Collections.Generic.IReadOnlyList<global::WotBlitzStatisticsPro.Blazor.GraphQl.IPlayer_AccountMedals_Sections_Medals>? medals)
        {
            SectionId = sectionId;
            Order = order;
            Name = name;
            Medals = medals;
        }

        /// <summary>
        /// Section Identifier
        /// </summary>
        public global::System.String SectionId { get; }

        /// <summary>
        /// Section order
        /// </summary>
        public global::System.Int32 Order { get; }

        /// <summary>
        /// Section Name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Achievements in the section
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::WotBlitzStatisticsPro.Blazor.GraphQl.IPlayer_AccountMedals_Sections_Medals>? Medals { get; }

        public virtual global::System.Boolean Equals(Player_AccountMedals_Sections_AchievementSection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (SectionId.Equals(other.SectionId)) && Order == other.Order && Name.Equals(other.Name) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Medals, other.Medals);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((Player_AccountMedals_Sections_AchievementSection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * SectionId.GetHashCode();
                hash ^= 397 * Order.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                if (Medals != null)
                {
                    foreach (var Medals_elm in Medals)
                    {
                        hash ^= 397 * Medals_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }
}
