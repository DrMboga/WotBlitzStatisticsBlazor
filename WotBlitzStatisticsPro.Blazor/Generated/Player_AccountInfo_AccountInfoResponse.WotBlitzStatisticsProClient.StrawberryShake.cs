// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Information about player
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class Player_AccountInfo_AccountInfoResponse : global::System.IEquatable<Player_AccountInfo_AccountInfoResponse>, IPlayer_AccountInfo_AccountInfoResponse
    {
        public Player_AccountInfo_AccountInfoResponse(global::System.Int64 accountId, global::System.String? nickname, global::System.DateTimeOffset createdAt, global::System.DateTimeOffset lastBattleTime, global::System.Int64 battles, global::System.Decimal winRate, global::System.Decimal avgDamage, global::System.Decimal avgXp, global::System.Double avgTier, global::System.Decimal damageCoefficient, global::System.Decimal survivalRate, global::System.Collections.Generic.IReadOnlyList<global::WotBlitzStatisticsPro.Blazor.GraphQl.IPlayer_AccountInfo_Tanks>? tanks)
        {
            AccountId = accountId;
            Nickname = nickname;
            CreatedAt = createdAt;
            LastBattleTime = lastBattleTime;
            Battles = battles;
            WinRate = winRate;
            AvgDamage = avgDamage;
            AvgXp = avgXp;
            AvgTier = avgTier;
            DamageCoefficient = damageCoefficient;
            SurvivalRate = survivalRate;
            Tanks = tanks;
        }

        /// <summary>
        /// Player account identifier
        /// </summary>
        public global::System.Int64 AccountId { get; }

        /// <summary>
        /// Player's nick
        /// </summary>
        public global::System.String? Nickname { get; }

        /// <summary>
        /// Account creation date
        /// </summary>
        public global::System.DateTimeOffset CreatedAt { get; }

        /// <summary>
        /// Last battle time
        /// </summary>
        public global::System.DateTimeOffset LastBattleTime { get; }

        /// <summary>
        /// Battles count
        /// </summary>
        public global::System.Int64 Battles { get; }

        /// <summary>
        /// Player's win rate
        /// </summary>
        public global::System.Decimal WinRate { get; }

        /// <summary>
        /// Player's average damage
        /// </summary>
        public global::System.Decimal AvgDamage { get; }

        /// <summary>
        /// Player's average XP
        /// </summary>
        public global::System.Decimal AvgXp { get; }

        /// <summary>
        /// Average tier
        /// </summary>
        public global::System.Double AvgTier { get; }

        /// <summary>
        /// Damage coefficient
        /// </summary>
        public global::System.Decimal DamageCoefficient { get; }

        /// <summary>
        /// Rate of survival
        /// </summary>
        public global::System.Decimal SurvivalRate { get; }

        /// <summary>
        /// All player's tanks
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::WotBlitzStatisticsPro.Blazor.GraphQl.IPlayer_AccountInfo_Tanks>? Tanks { get; }

        public virtual global::System.Boolean Equals(Player_AccountInfo_AccountInfoResponse? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (AccountId == other.AccountId) && ((Nickname is null && other.Nickname is null) || Nickname != null && Nickname.Equals(other.Nickname)) && CreatedAt.Equals(other.CreatedAt) && LastBattleTime.Equals(other.LastBattleTime) && Battles == other.Battles && WinRate == other.WinRate && AvgDamage == other.AvgDamage && AvgXp == other.AvgXp && AvgTier == other.AvgTier && DamageCoefficient == other.DamageCoefficient && SurvivalRate == other.SurvivalRate && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Tanks, other.Tanks);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((Player_AccountInfo_AccountInfoResponse)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * AccountId.GetHashCode();
                if (Nickname != null)
                {
                    hash ^= 397 * Nickname.GetHashCode();
                }

                hash ^= 397 * CreatedAt.GetHashCode();
                hash ^= 397 * LastBattleTime.GetHashCode();
                hash ^= 397 * Battles.GetHashCode();
                hash ^= 397 * WinRate.GetHashCode();
                hash ^= 397 * AvgDamage.GetHashCode();
                hash ^= 397 * AvgXp.GetHashCode();
                hash ^= 397 * AvgTier.GetHashCode();
                hash ^= 397 * DamageCoefficient.GetHashCode();
                hash ^= 397 * SurvivalRate.GetHashCode();
                if (Tanks != null)
                {
                    foreach (var Tanks_elm in Tanks)
                    {
                        hash ^= 397 * Tanks_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }
}
