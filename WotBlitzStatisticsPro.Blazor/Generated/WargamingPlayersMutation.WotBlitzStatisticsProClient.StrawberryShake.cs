// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Represents the operation service of the WargamingPlayers GraphQL operation
    /// <code>
    /// mutation WargamingPlayers {
    ///   removePlayerHistory(realm: RU, accountId: 12345)
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class WargamingPlayersMutation : global::WotBlitzStatisticsPro.Blazor.GraphQl.IWargamingPlayersMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<IWargamingPlayersResult> _operationExecutor;
        public WargamingPlayersMutation(global::StrawberryShake.IOperationExecutor<IWargamingPlayersResult> operationExecutor)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IWargamingPlayersResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IWargamingPlayersResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest();
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IWargamingPlayersResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest();
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest()
        {
            return CreateRequest(null);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: WargamingPlayersMutationDocument.Instance.Hash.Value, name: "WargamingPlayers", document: WargamingPlayersMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest();
        }
    }
}
