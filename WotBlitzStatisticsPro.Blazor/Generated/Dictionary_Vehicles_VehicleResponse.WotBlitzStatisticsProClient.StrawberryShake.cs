// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Response for vehicle dictionary query
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.12.1.0")]
    public partial class Dictionary_Vehicles_VehicleResponse : global::System.IEquatable<Dictionary_Vehicles_VehicleResponse>, IDictionary_Vehicles_VehicleResponse
    {
        public Dictionary_Vehicles_VehicleResponse(global::System.Int64 tankId, global::System.String name, global::System.String description, global::System.Boolean isPremium, global::System.String typeId, global::System.String nationId, global::System.Int32 tier, global::System.String previewImage, global::System.String normalImage, global::System.Decimal priceCredit, global::System.Decimal priceGold, global::System.Collections.Generic.IReadOnlyList<global::System.Int64>? nexTanksInTree)
        {
            TankId = tankId;
            Name = name;
            Description = description;
            IsPremium = isPremium;
            TypeId = typeId;
            NationId = nationId;
            Tier = tier;
            PreviewImage = previewImage;
            NormalImage = normalImage;
            PriceCredit = priceCredit;
            PriceGold = priceGold;
            NexTanksInTree = nexTanksInTree;
        }

        /// <summary>
        /// VehicleId
        /// </summary>
        public global::System.Int64 TankId { get; }

        /// <summary>
        /// Vehicle name
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// Vehicle description
        /// </summary>
        public global::System.String Description { get; }

        /// <summary>
        /// Is vehicle premium
        /// </summary>
        public global::System.Boolean IsPremium { get; }

        /// <summary>
        /// Vehicle type id
        /// </summary>
        public global::System.String TypeId { get; }

        /// <summary>
        /// Vehicle nationId
        /// </summary>
        public global::System.String NationId { get; }

        /// <summary>
        /// Vehicle tier
        /// </summary>
        public global::System.Int32 Tier { get; }

        /// <summary>
        /// Vehicle preview image
        /// </summary>
        public global::System.String PreviewImage { get; }

        /// <summary>
        /// Vehicle normal image
        /// </summary>
        public global::System.String NormalImage { get; }

        /// <summary>
        /// Vehicle price in credits
        /// </summary>
        public global::System.Decimal PriceCredit { get; }

        /// <summary>
        /// Vehicle price in gold
        /// </summary>
        public global::System.Decimal PriceGold { get; }

        /// <summary>
        /// Ids of nex tanks and their cost in XP
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.Int64>? NexTanksInTree { get; }

        public virtual global::System.Boolean Equals(Dictionary_Vehicles_VehicleResponse? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (TankId == other.TankId) && Name.Equals(other.Name) && Description.Equals(other.Description) && IsPremium == other.IsPremium && TypeId.Equals(other.TypeId) && NationId.Equals(other.NationId) && Tier == other.Tier && PreviewImage.Equals(other.PreviewImage) && NormalImage.Equals(other.NormalImage) && PriceCredit == other.PriceCredit && PriceGold == other.PriceGold && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(NexTanksInTree, other.NexTanksInTree);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((Dictionary_Vehicles_VehicleResponse)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * TankId.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                hash ^= 397 * Description.GetHashCode();
                hash ^= 397 * IsPremium.GetHashCode();
                hash ^= 397 * TypeId.GetHashCode();
                hash ^= 397 * NationId.GetHashCode();
                hash ^= 397 * Tier.GetHashCode();
                hash ^= 397 * PreviewImage.GetHashCode();
                hash ^= 397 * NormalImage.GetHashCode();
                hash ^= 397 * PriceCredit.GetHashCode();
                hash ^= 397 * PriceGold.GetHashCode();
                if (NexTanksInTree != null)
                {
                    foreach (var NexTanksInTree_elm in NexTanksInTree)
                    {
                        hash ^= 397 * NexTanksInTree_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }
}
