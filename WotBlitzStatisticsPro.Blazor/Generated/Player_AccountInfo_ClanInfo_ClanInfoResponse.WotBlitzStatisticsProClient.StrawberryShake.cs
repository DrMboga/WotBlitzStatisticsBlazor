// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Clan information
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.12.1.0")]
    public partial class Player_AccountInfo_ClanInfo_ClanInfoResponse : global::System.IEquatable<Player_AccountInfo_ClanInfo_ClanInfoResponse>, IPlayer_AccountInfo_ClanInfo_ClanInfoResponse
    {
        public Player_AccountInfo_ClanInfo_ClanInfoResponse(global::System.Int64 clanId, global::System.DateTimeOffset joinedAt, global::System.String? role, global::System.String roleLocalized, global::System.String? name, global::System.DateTimeOffset createdAt, global::System.Int64? creatorId, global::System.String? creatorName, global::System.String? description, global::System.String? descriptionHtml, global::System.Int64? leaderId, global::System.String? leaderName, global::System.Int64? membersCount, global::System.String? motto, global::System.String? tag, global::System.DateTimeOffset? updatedAt)
        {
            ClanId = clanId;
            JoinedAt = joinedAt;
            Role = role;
            RoleLocalized = roleLocalized;
            Name = name;
            CreatedAt = createdAt;
            CreatorId = creatorId;
            CreatorName = creatorName;
            Description = description;
            DescriptionHtml = descriptionHtml;
            LeaderId = leaderId;
            LeaderName = leaderName;
            MembersCount = membersCount;
            Motto = motto;
            Tag = tag;
            UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Clan ID
        /// </summary>
        public global::System.Int64 ClanId { get; }

        /// <summary>
        /// Date of joining clan
        /// </summary>
        public global::System.DateTimeOffset JoinedAt { get; }

        /// <summary>
        /// Player clan role ID
        /// </summary>
        public global::System.String? Role { get; }

        /// <summary>
        /// Player clan role
        /// </summary>
        public global::System.String RoleLocalized { get; }

        /// <summary>
        /// Clan name
        /// </summary>
        public global::System.String? Name { get; }

        /// <summary>
        /// Date of clan creation
        /// </summary>
        public global::System.DateTimeOffset CreatedAt { get; }

        /// <summary>
        /// Clan creator account id
        /// </summary>
        public global::System.Int64? CreatorId { get; }

        /// <summary>
        /// Clan creator nick
        /// </summary>
        public global::System.String? CreatorName { get; }

        /// <summary>
        /// Clan description
        /// </summary>
        public global::System.String? Description { get; }

        /// <summary>
        /// Html Clan description
        /// </summary>
        public global::System.String? DescriptionHtml { get; }

        /// <summary>
        /// Clan commander accountId
        /// </summary>
        public global::System.Int64? LeaderId { get; }

        /// <summary>
        /// Clan commander nick
        /// </summary>
        public global::System.String? LeaderName { get; }

        /// <summary>
        /// Clan members count
        /// </summary>
        public global::System.Int64? MembersCount { get; }

        /// <summary>
        /// Clan motto
        /// </summary>
        public global::System.String? Motto { get; }

        /// <summary>
        /// Clan tag
        /// </summary>
        public global::System.String? Tag { get; }

        /// <summary>
        /// Clan info updated at
        /// </summary>
        public global::System.DateTimeOffset? UpdatedAt { get; }

        public virtual global::System.Boolean Equals(Player_AccountInfo_ClanInfo_ClanInfoResponse? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (ClanId == other.ClanId) && JoinedAt.Equals(other.JoinedAt) && ((Role is null && other.Role is null) || Role != null && Role.Equals(other.Role)) && RoleLocalized.Equals(other.RoleLocalized) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && CreatedAt.Equals(other.CreatedAt) && CreatorId == other.CreatorId && ((CreatorName is null && other.CreatorName is null) || CreatorName != null && CreatorName.Equals(other.CreatorName)) && ((Description is null && other.Description is null) || Description != null && Description.Equals(other.Description)) && ((DescriptionHtml is null && other.DescriptionHtml is null) || DescriptionHtml != null && DescriptionHtml.Equals(other.DescriptionHtml)) && LeaderId == other.LeaderId && ((LeaderName is null && other.LeaderName is null) || LeaderName != null && LeaderName.Equals(other.LeaderName)) && MembersCount == other.MembersCount && ((Motto is null && other.Motto is null) || Motto != null && Motto.Equals(other.Motto)) && ((Tag is null && other.Tag is null) || Tag != null && Tag.Equals(other.Tag)) && ((UpdatedAt is null && other.UpdatedAt is null) || UpdatedAt != null && UpdatedAt.Equals(other.UpdatedAt));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((Player_AccountInfo_ClanInfo_ClanInfoResponse)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * ClanId.GetHashCode();
                hash ^= 397 * JoinedAt.GetHashCode();
                if (Role != null)
                {
                    hash ^= 397 * Role.GetHashCode();
                }

                hash ^= 397 * RoleLocalized.GetHashCode();
                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                hash ^= 397 * CreatedAt.GetHashCode();
                if (CreatorId != null)
                {
                    hash ^= 397 * CreatorId.GetHashCode();
                }

                if (CreatorName != null)
                {
                    hash ^= 397 * CreatorName.GetHashCode();
                }

                if (Description != null)
                {
                    hash ^= 397 * Description.GetHashCode();
                }

                if (DescriptionHtml != null)
                {
                    hash ^= 397 * DescriptionHtml.GetHashCode();
                }

                if (LeaderId != null)
                {
                    hash ^= 397 * LeaderId.GetHashCode();
                }

                if (LeaderName != null)
                {
                    hash ^= 397 * LeaderName.GetHashCode();
                }

                if (MembersCount != null)
                {
                    hash ^= 397 * MembersCount.GetHashCode();
                }

                if (Motto != null)
                {
                    hash ^= 397 * Motto.GetHashCode();
                }

                if (Tag != null)
                {
                    hash ^= 397 * Tag.GetHashCode();
                }

                if (UpdatedAt != null)
                {
                    hash ^= 397 * UpdatedAt.GetHashCode();
                }

                return hash;
            }
        }
    }
}
