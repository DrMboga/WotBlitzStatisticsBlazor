// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Player's achievement information
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.12.1.0")]
    public partial class Player_AccountMedals_Sections_Medals_Achievement : global::System.IEquatable<Player_AccountMedals_Sections_Medals_Achievement>, IPlayer_AccountMedals_Sections_Medals_Achievement
    {
        public Player_AccountMedals_Sections_Medals_Achievement(global::System.String id, global::System.String? name, global::System.String? medalType, global::System.String? condition, global::System.String? description, global::System.Int32 achievementValue, global::System.Int32? maxSeriesValue, global::System.String? image, global::System.String? imageBig, global::System.Int64? order, global::System.String sectionId)
        {
            Id = id;
            Name = name;
            MedalType = medalType;
            Condition = condition;
            Description = description;
            AchievementValue = achievementValue;
            MaxSeriesValue = maxSeriesValue;
            Image = image;
            ImageBig = imageBig;
            Order = order;
            SectionId = sectionId;
        }

        /// <summary>
        /// Achievement Id
        /// </summary>
        public global::System.String Id { get; }

        /// <summary>
        /// Achievement name
        /// </summary>
        public global::System.String? Name { get; }

        /// <summary>
        /// Achievement type
        /// </summary>
        public global::System.String? MedalType { get; }

        /// <summary>
        /// Achievement condition
        /// </summary>
        public global::System.String? Condition { get; }

        /// <summary>
        /// Achievement description
        /// </summary>
        public global::System.String? Description { get; }

        /// <summary>
        /// Achievement value
        /// </summary>
        public global::System.Int32 AchievementValue { get; }

        /// <summary>
        /// Achievement max series value
        /// </summary>
        public global::System.Int32? MaxSeriesValue { get; }

        /// <summary>
        /// Achievement normal sized image
        /// </summary>
        public global::System.String? Image { get; }

        /// <summary>
        /// Achievement big image
        /// </summary>
        public global::System.String? ImageBig { get; }

        /// <summary>
        /// Order
        /// </summary>
        public global::System.Int64? Order { get; }

        /// <summary>
        /// Section Id
        /// </summary>
        public global::System.String SectionId { get; }

        public virtual global::System.Boolean Equals(Player_AccountMedals_Sections_Medals_Achievement? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id.Equals(other.Id)) && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && ((MedalType is null && other.MedalType is null) || MedalType != null && MedalType.Equals(other.MedalType)) && ((Condition is null && other.Condition is null) || Condition != null && Condition.Equals(other.Condition)) && ((Description is null && other.Description is null) || Description != null && Description.Equals(other.Description)) && AchievementValue == other.AchievementValue && MaxSeriesValue == other.MaxSeriesValue && ((Image is null && other.Image is null) || Image != null && Image.Equals(other.Image)) && ((ImageBig is null && other.ImageBig is null) || ImageBig != null && ImageBig.Equals(other.ImageBig)) && Order == other.Order && SectionId.Equals(other.SectionId);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((Player_AccountMedals_Sections_Medals_Achievement)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                if (MedalType != null)
                {
                    hash ^= 397 * MedalType.GetHashCode();
                }

                if (Condition != null)
                {
                    hash ^= 397 * Condition.GetHashCode();
                }

                if (Description != null)
                {
                    hash ^= 397 * Description.GetHashCode();
                }

                hash ^= 397 * AchievementValue.GetHashCode();
                if (MaxSeriesValue != null)
                {
                    hash ^= 397 * MaxSeriesValue.GetHashCode();
                }

                if (Image != null)
                {
                    hash ^= 397 * Image.GetHashCode();
                }

                if (ImageBig != null)
                {
                    hash ^= 397 * ImageBig.GetHashCode();
                }

                if (Order != null)
                {
                    hash ^= 397 * Order.GetHashCode();
                }

                hash ^= 397 * SectionId.GetHashCode();
                return hash;
            }
        }
    }
}
