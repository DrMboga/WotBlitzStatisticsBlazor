// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Represents the operation service of the Player GraphQL operation
    /// <code>
    /// query Player($accountId: Long!, $realmType: RealmType!, $requestLanguage: RequestLanguage!) {
    ///   accountInfo(accountId: $accountId, realmType: $realmType, requestLanguage: $requestLanguage) {
    ///     __typename
    ///     accountId
    ///     nickname
    ///     createdAt
    ///     lastBattleTime
    ///     battles
    ///     winRate
    ///     avgDamage
    ///     avgXp
    ///     avgTier
    ///     damageCoefficient
    ///     survivalRate
    ///     tanks {
    ///       __typename
    ///       tankId
    ///       name
    ///       tankNation
    ///       tankType
    ///       tier
    ///       isPremium
    ///       lastBattleTime
    ///       battles
    ///       winRate
    ///       avgDamage
    ///       avgXp
    ///       avgBattleLifeTimeInMinutes
    ///       damageCoefficient
    ///       survivalRate
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IPlayerQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IPlayerResult>> ExecuteAsync(global::System.Int64 accountId, global::WotBlitzStatisticsPro.Blazor.GraphQl.RealmType realmType, global::WotBlitzStatisticsPro.Blazor.GraphQl.RequestLanguage requestLanguage, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IPlayerResult>> Watch(global::System.Int64 accountId, global::WotBlitzStatisticsPro.Blazor.GraphQl.RealmType realmType, global::WotBlitzStatisticsPro.Blazor.GraphQl.RequestLanguage requestLanguage, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}
