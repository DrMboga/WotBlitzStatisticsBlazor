// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Represents the operation service of the Player GraphQL operation
    /// <code>
    /// query Player($accountId: Long!, $realmType: RealmType!, $requestLanguage: RequestLanguage!) {
    ///   accountInfo(accountId: $accountId, realmType: $realmType, requestLanguage: $requestLanguage) {
    ///     __typename
    ///     ... account
    ///   }
    ///   accountMedals(accountId: $accountId, realmType: $realmType, requestLanguage: $requestLanguage) {
    ///     __typename
    ///     accountId
    ///     sections {
    ///       __typename
    ///       ... section
    ///     }
    ///   }
    /// }
    /// 
    /// fragment account on AccountInfoResponse {
    ///   accountId
    ///   createdAt
    ///   nickname
    ///   maxFragsTankId
    ///   maxXpTankId
    ///   avgTier
    ///   ... statistics
    ///   clanInfo {
    ///     __typename
    ///     ... clan
    ///   }
    ///   tanks {
    ///     __typename
    ///     ... tank
    ///   }
    /// }
    /// 
    /// fragment statistics on Statistics {
    ///   lastBattleTime
    ///   battles
    ///   capturePoints
    ///   damageDealt
    ///   damageReceived
    ///   droppedCapturePoints
    ///   frags
    ///   frags8P
    ///   hits
    ///   losses
    ///   maxFrags
    ///   maxXp
    ///   shots
    ///   spotted
    ///   survivedBattles
    ///   winAndSurvived
    ///   wins
    ///   xp
    ///   wn7
    ///   winRate
    ///   avgDamage
    ///   avgXp
    ///   damageCoefficient
    ///   survivalRate
    /// }
    /// 
    /// fragment clan on ClanInfoResponse {
    ///   clanId
    ///   joinedAt
    ///   role
    ///   roleLocalized
    ///   name
    ///   createdAt
    ///   creatorId
    ///   creatorName
    ///   description
    ///   descriptionHtml
    ///   leaderId
    ///   leaderName
    ///   membersCount
    ///   motto
    ///   tag
    ///   updatedAt
    /// }
    /// 
    /// fragment tank on TankInfoResponse {
    ///   tankId
    ///   battleLifeTimeInSeconds
    ///   markOfMastery
    ///   avgBattleLifeTimeInMinutes
    ///   name
    ///   tankNationId
    ///   tankNation
    ///   tier
    ///   tankTypeId
    ///   tankType
    ///   isPremium
    ///   previewImage
    ///   normalImage
    ///   ... statistics
    /// }
    /// 
    /// fragment section on AchievementSection {
    ///   sectionId
    ///   order
    ///   name
    ///   medals {
    ///     __typename
    ///     ... medal
    ///     ... on Achievement {
    ///       id
    ///     }
    ///   }
    /// }
    /// 
    /// fragment medal on Achievement {
    ///   id
    ///   name
    ///   medalType
    ///   condition
    ///   description
    ///   achievementValue
    ///   maxSeriesValue
    ///   image
    ///   imageBig
    ///   order
    ///   sectionId
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public interface IPlayerQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IPlayerResult>> ExecuteAsync(global::System.Int64 accountId, global::WotBlitzStatisticsPro.Blazor.GraphQl.RealmType realmType, global::WotBlitzStatisticsPro.Blazor.GraphQl.RequestLanguage requestLanguage, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IPlayerResult>> Watch(global::System.Int64 accountId, global::WotBlitzStatisticsPro.Blazor.GraphQl.RealmType realmType, global::WotBlitzStatisticsPro.Blazor.GraphQl.RequestLanguage requestLanguage, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }
}
