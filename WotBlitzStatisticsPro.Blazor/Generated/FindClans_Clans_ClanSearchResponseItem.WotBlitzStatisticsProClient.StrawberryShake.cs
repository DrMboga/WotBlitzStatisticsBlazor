// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Found clans list item
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "11.2.2.0")]
    public partial class FindClans_Clans_ClanSearchResponseItem : global::System.IEquatable<FindClans_Clans_ClanSearchResponseItem>, IFindClans_Clans_ClanSearchResponseItem
    {
        public FindClans_Clans_ClanSearchResponseItem(global::System.Int64 clanId, global::System.Int32 createdAt, global::System.Int32 membersCount, global::System.String? name, global::System.String? tag)
        {
            ClanId = clanId;
            CreatedAt = createdAt;
            MembersCount = membersCount;
            Name = name;
            Tag = tag;
        }

        /// <summary>
        /// Clan Id
        /// </summary>
        public global::System.Int64 ClanId { get; }

        /// <summary>
        /// Clan created at. (UNIX Epoch time)
        /// </summary>
        public global::System.Int32 CreatedAt { get; }

        /// <summary>
        /// Clan members count
        /// </summary>
        public global::System.Int32 MembersCount { get; }

        /// <summary>
        /// Clan Name
        /// </summary>
        public global::System.String? Name { get; }

        /// <summary>
        /// Clan Tag
        /// </summary>
        public global::System.String? Tag { get; }

        public virtual global::System.Boolean Equals(FindClans_Clans_ClanSearchResponseItem? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (ClanId == other.ClanId) && CreatedAt == other.CreatedAt && MembersCount == other.MembersCount && ((Name is null && other.Name is null) || Name != null && Name.Equals(other.Name)) && ((Tag is null && other.Tag is null) || Tag != null && Tag.Equals(other.Tag));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((FindClans_Clans_ClanSearchResponseItem)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * ClanId.GetHashCode();
                hash ^= 397 * CreatedAt.GetHashCode();
                hash ^= 397 * MembersCount.GetHashCode();
                if (Name != null)
                {
                    hash ^= 397 * Name.GetHashCode();
                }

                if (Tag != null)
                {
                    hash ^= 397 * Tag.GetHashCode();
                }

                return hash;
            }
        }
    }
}
