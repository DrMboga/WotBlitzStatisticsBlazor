// <auto-generated/>
#nullable enable

namespace WotBlitzStatisticsPro.Blazor.GraphQl
{
    /// <summary>
    /// Prolong Wargaming Auth token response
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.12.1.0")]
    public partial class WargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo : global::System.IEquatable<WargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo>, IWargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo
    {
        public WargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo(global::System.String accessToken, global::System.Int64 accountId, global::System.Int32 expirationTimeStamp)
        {
            AccessToken = accessToken;
            AccountId = accountId;
            ExpirationTimeStamp = expirationTimeStamp;
        }

        /// <summary>
        /// New access token
        /// </summary>
        public global::System.String AccessToken { get; }

        /// <summary>
        /// Player Account Id
        /// </summary>
        public global::System.Int64 AccountId { get; }

        /// <summary>
        /// New expiration unix timestamp
        /// </summary>
        public global::System.Int32 ExpirationTimeStamp { get; }

        public virtual global::System.Boolean Equals(WargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (AccessToken.Equals(other.AccessToken)) && AccountId == other.AccountId && ExpirationTimeStamp == other.ExpirationTimeStamp;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((WargamingOpenIdAuthentication_ProlongAuthToken_WargamingProlongInfo)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * AccessToken.GetHashCode();
                hash ^= 397 * AccountId.GetHashCode();
                hash ^= 397 * ExpirationTimeStamp.GetHashCode();
                return hash;
            }
        }
    }
}
